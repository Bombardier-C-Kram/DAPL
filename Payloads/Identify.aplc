:Class Identify
    ⎕IO←0
    
    ⍝ A table of IntentOptions
    ⍝ Formatted as, IntentName IntentIndexNumber
    ∇ r←getIntentOpts
      r←('GUILDS' 0)
      r←r,('GUILD_MEMBERS' 1)
      r←r,('GUILD_BANS' 2)
      r←r,('GUILD_EMOJIS_AND_STICKERS' 3)
      r←r,('GUILD_INTEGRATIONS' 4)
      r←r,('GUILD_WEBHOOKS' 5)
      r←r,('GUILD_INVITES' 6)
      r←r,('GUILD_VOICE_STATES' 7)
      r←r,('GUILD_PRESENCES' 8)
      r←r,('GUILD_MESSAGES' 9)
      r←r,('GUILD_MESSAGE_REACTIONS' 10)
      r←r,('DIRECT_MESSAGE_TYPING' 11)
      r←r,('DIRECT_MESSAGES' 12)
      r←r,('DIRECT_MESSAGE_REACTIONS' 13)
      r←r,('DIRECT_MESSAGE_TYPING' 14)
      r←r,('MESSAGE_CONTENT' 15)
      r←r,('GUILD_SCHEDULED_EVENTS' 16)
      r←21 2⍴r
    ∇

    ⍝ Set intentOpts variable
    intentOpts←getIntentOpts

    ⍝ A function to get an intentIndex from the Intent Opts Table
    getIntent←{getIntentOpts #.dapl.DAPL.Lookup ⍵}

    :Field Public Pld


    ∇ Make(token intent)
      :Access Public
      :Implements Constructor
     
      ⍝ Intents available are the following:
      ⍝ GUILDS
      ⍝ GUILD_MEMBERS
      ⍝ GUILD_BANS
      ⍝ GUILD_EMOJIS_AND_STICKERS
      ⍝ GUILD_INTEGRATIONS
      ⍝ GUILD_WEBHOOKS
      ⍝ GUILD_INVITES
      ⍝ GUILD_VOICE_STATES
      ⍝ GUILD_PRESENCES
      ⍝ GUILD_MESSAGES
      ⍝ GUILD_MESSAGE_REACTIONS
      ⍝ GUILD_MESSAGE_TYPING
      ⍝ DIRECT_MESSAGES
      ⍝ DIRECT_MESSAGE_REACTIONS
      ⍝ DIRECT_MESSAGE_TYPING
      ⍝ GUILD_SCHEDULED_EVENTS
      ⍝ MESSAGE_CONTENT
      ⍝
      ⍝ Example of intent array in args:
      ⍝ ('GUILDS' 'GUILD_MEMBERS' 'GUILD_BANS')
      ⍝ Discords documetation is not clear weather it is a 16 bit long array, or a 17 bit long array
      ⍝ I will just assume that the discord employees are not insane.
     
      ⍝ To get our intent number, we first need to calculate it.
      ⍝ Discord uses a bit shift to do this
      ⍝ So, if we want GUILDS, and GUILD_MEMBERS intents,
      ⍝ We have 0 and 1 as their indexes, 
      ⍝ so we index into the array, and set those two bits to be 1

      ⍝ 16 bit array
      intentBitArray←21⍴0

      ⍝ get all the indicies for the array
      intentBitIndicies←getIntent¨intent

      ⍝ Now set those indicies to be 1
      intentBitArray[intentBitIndicies]←1
     
      ⍝ Convert our bit array to a number!
      intentNumber←2⊥⌽intentBitArray
     
     
     
     
     
      r←⎕NS''
      r.pld←⎕NS''
      r.pld.properties←⎕NS''
      r.pld.presence←⎕NS''
     
      r.op←2            ⍝ Ident OpCode
      r.pld.token←token ⍝ Token
      r.pld.compress←⊂'false' ⍝ Dont compress please
      r.pld.large_threshold←50 ⍝ send the least amount of data as possible, its useless to me
      r.pld.intents←intentNumber ⍝ Int of intents
     
      r.pld.properties.⍙⍙36⍙os←819⌶'-64'~⍨⊃# ⎕WG'APLVersion' ⍝ Discord likes to know this, and it is manditory to supplpy
      r.pld.properties.⍙⍙36⍙browser←'DiscordAPL' ⍝ Set to library name
      r.pld.properties.⍙⍙36⍙device←'DiscordAPL' ⍝ Set to library name
     
      r.pld.presence.since←⊂'null' ⍝ Not needed since we are not AFK
      r.pld.presence.status←'online' ⍝ Set to online
      r.pld.presence.afk←⊂'false' ⍝ AFK. If set, set since to a timestamp
      r.pld.presence.activities←(1⍴(⎕NS''))
      r.pld.presence.activities[0].name←'APL evolve' ⍝ We are (watching) APL Evolve!
     
      r.pld.presence.activities[0].type←3 ⍝ We are a type 3 (watching) activity
      Pld←r
    ∇
:EndClass
